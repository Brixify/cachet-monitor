version: 2

machine:
  services:
    - docker
  timezone: Europe/Paris

jobs:
  build:
    working_directory: /go/src/cachet/cli
    docker:
      - image: circleci/golang:1.8
        environment:
          GOPATH: /go
    steps:
      - checkout:
          path: /go/src/cachet
      - run:
          name: Checking GO version...
          command: go version
      - run:
          name: Downloading dependencies...
          command: go get .
      - run:
          name: Building...
          command: go build -ldflags "-X main.AppBranch=${CIRCLE_BRANCH} -X main.Build=${CIRCLE_SHA1} -X main.BuildDate=`date +%Y-%m-%d_%H:%M:%S`" -o cachet_monitor
      - run:
          name: Checking delivery...
          command: ls -l cachet_monitor
      - save_cache:
          key: cachet-monitory-delivery-cache-{{ checksum "cachet_monitor" }}
          paths:
            - /go/src/cachet/cli

  test:
    working_directory: /go/src/cachet/cli
    docker:
      - image: circleci/golang:1.8
    steps:
      - restore-cache:
          keys:
            - cachet-monitory-delivery-cache-
      - run:
          name: Listing build version...
          command: ./cachet_monitor --version
      - store_artifacts:
          path: /go/src/cachet/cli/cachet_monitor
          destination: artifact-file

  release:
    working_directory: /go/src/cachet/cli
    docker:
      - image: circleci/golang:1.8
    steps:
      - restore-cache:
          keys:
            - cachet-monitory-delivery-cache-
      - run:
          name: Downloading GitHub Release...
          command: wget -O./ghr.zip https://github.com/tcnksm/ghr/releases/download/v0.5.4/ghr_v0.5.4_linux_amd64.zip && unzip ghr.zip && chmod +x ./ghr
      - run:
          name: Preparing release...
          command: mkdir ./dist && mv ./cachet_monitor ./dist
      - run:
          name: GitHub Release...
          command: |
            if [[ "`echo ${CIRCLE_BRANCH} | tr '[:upper:]' '[:lower:]'`" == *"snapshot"* ]]; then
              ./ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} --delete --prerelease --replace ${CIRCLE_BRANCH} ./dist
            else
              ./ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} --delete --replace ${CIRCLE_BRANCH} ./dist
            fi

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
      - release:
          requires:
            - build
            - test
